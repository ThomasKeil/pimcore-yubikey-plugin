<?php
/**
 * This source file is subject to the new BSD license that is
 * available through the world-wide-web at this URL:
 * http://www.pimcore.org/license
 *
 * @category   Pimcore
 * @copyright  Copyright (c) 2015 Weblizards GmbH (http://www.weblizards.de)
 * @author     Thomas Keil <thomas@weblizards.de>
 * @license    http://www.pimcore.org/license     New BSD License
 */

namespace YubiKey;

use Pimcore;
use Pimcore\Model;
use Auth;

/**
 * Class Authenticator
 * @package YubiKey
 *
 * Authenticates a user with username and password with the
 * YubiKey services.
 * The password should be a One Time Pad generated by a YubiKey
 * password generator.
 */
class Authenticator {

  private static $id = "19628";
  private static $key = "u0W17Of4vqfpKnjZi3BXhA9H6jQ=";

  /**
   * Tries to authenticate a user with username and password (which should, in
   * this case, e
   *
   * @param $username
   * @param $password
   * @return null|\Pimcore\Model\User
   */
  public static function authenticate($username, $password) {

    Logger::log("Authenticating User ".$username);

    $pimcore_user = Pimcore\Model\User::getByName($username);
    if (! $pimcore_user instanceof Pimcore\Model\User) {
      Logger::log("User ".$username." nicht gefunden.");
      return null;
    }

    $yubikey_user = User::getById($pimcore_user->getId());

    if (is_null($yubikey_user)) return null;

    if (!$yubikey_user->getActivelocal()) {
      return null;
    }

    $yubico = new Auth\Yubico(self::$id, self::$key);

    $serial = substr($password, 0, 12);

    foreach ($yubikey_user->getKeys() as $key) {
      if ($key["serial"] == $serial) {
        try {
          $yubico->verify($password);
        } catch (\Exception $e) {
          Logger::log("Authentication failed: " . $e->getMessage());
          Logger::debug("Debug output from server: ".$yubico->getLastResponse());
          return null;
        }

        Logger::log("Success Authenticating User ".$username);
        return $pimcore_user;
      }
    }
    return null;
  }
}